from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from typing import List, Optional

from bot.locales.utils import get_text
from bot.database.models import Agent, User
from config import GPT_MODEL, CLAUDE_MODEL


def get_models_keyboard(language_code: str = "en") -> InlineKeyboardMarkup:
    keyboard = [
        [
            InlineKeyboardButton(
                text=get_text("gpt_button", language_code),
                callback_data=f"model_{GPT_MODEL}",
            ),
            InlineKeyboardButton(
                text=get_text("claude_button", language_code),
                callback_data=f"model_{CLAUDE_MODEL}",
            ),
        ],
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


# ================================================
# Agent Management Keyboards
# ================================================

def get_agents_main_keyboard(language_code: str = "en") -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞–º–∏"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üìã –°–ø–∏—Å–æ–∫ –∞–≥–µ–Ω—Ç–æ–≤",
                callback_data="agents_list"
            ),
            InlineKeyboardButton(
                text="‚ûï –°–æ–∑–¥–∞—Ç—å",
                callback_data="agent_create"
            ),
        ],
        [
            InlineKeyboardButton(
                text="üîµ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º", 
                callback_data="agent_switch_default"
            ),
        ],
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_agents_list_keyboard(agents: List[Agent], current_agent_id: Optional[str] = None, language_code: str = "en") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–≥–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    keyboard = []
    
    # Default mode button
    default_text = "üü¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º" if current_agent_id is None else "‚ö™ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º"
    keyboard.append([
        InlineKeyboardButton(
            text=default_text,
            callback_data="agent_switch_default"
        )
    ])
    
    # Agent buttons (2 per row)
    for i in range(0, len(agents), 2):
        row = []
        for j in range(i, min(i + 2, len(agents))):
            agent = agents[j]
            is_current = agent.agent_id == current_agent_id
            prefix = "üü¢" if is_current else "‚ö™"
            
            row.append(InlineKeyboardButton(
                text=f"{prefix} {agent.name}",
                callback_data=f"agent_switch_{agent.agent_id}"
            ))
        keyboard.append(row)
    
    # Management buttons
    if agents:
        keyboard.append([
            InlineKeyboardButton(
                text="‚úèÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
                callback_data="agents_manage"
            )
        ])
    
    keyboard.append([
        InlineKeyboardButton(
            text="‚ûï –°–æ–∑–¥–∞—Ç—å –∞–≥–µ–Ω—Ç–∞",
            callback_data="agent_create"
        ),
        InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data="agents_menu"
        ),
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_agents_manage_keyboard(agents: List[Agent], language_code: str = "en") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞–º–∏ (—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ)"""
    keyboard = []
    
    # Agent management buttons
    for agent in agents:
        keyboard.append([
            InlineKeyboardButton(
                text=f"‚úèÔ∏è {agent.name}",
                callback_data=f"agent_edit_{agent.agent_id}"
            ),
            InlineKeyboardButton(
                text="üóë",
                callback_data=f"agent_delete_{agent.agent_id}"
            ),
        ])
    
    keyboard.append([
        InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data="agents_list"
        ),
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_agent_edit_keyboard(agent_id: str, language_code: str = "en") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ",
                callback_data=f"agent_edit_name_{agent_id}"
            ),
        ],
        [
            InlineKeyboardButton(
                text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º–ø—Ç",
                callback_data=f"agent_edit_prompt_{agent_id}"
            ),
        ],
        [
            InlineKeyboardButton(
                text="üóë –£–¥–∞–ª–∏—Ç—å –∞–≥–µ–Ω—Ç–∞",
                callback_data=f"agent_delete_{agent_id}"
            ),
        ],
        [
            InlineKeyboardButton(
                text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
                callback_data="agents_manage"
            ),
        ],
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_delete_confirmation_keyboard(agent_id: str, language_code: str = "en") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å",
                callback_data=f"agent_delete_confirm_{agent_id}"
            ),
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∞",
                callback_data="agents_manage"
            ),
        ],
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_cancel_keyboard(language_code: str = "en") -> InlineKeyboardMarkup:
    """–ü—Ä–æ—Å—Ç–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–º–µ–Ω—ã"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∞",
                callback_data="agents_menu"
            ),
        ],
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)



